1. 너비 우선 탐색. 가까운 노드부터 우선적으로 탐색

2. 큐 자료구조 이용

3.
(1) 탐색 시작 노드를 큐에 삽입하고 방문 처리

무한 반복
(2) 큐에서 하나를 꺼내 인접 노드 중 방문하지 않은 노드를 모두 큐에 삽입 후 자신을 방문처리


4. 구현 예시

from collections import deque

def bfs(graph, start, visited):
    queue = deque([start])
    visited[start] = True
    while queue:
        v = queue.popleft()
        print(v, end=' ')
        for i in graph[v]:
            if not visited[i]:
            queue.append(i)
            visited[i] = True

graph = [
    [],
    [2, 3, 8],
    [1, 7],
    [1, 4, 5],
    [3, 5],
    [3, 4],
    [7],
    [2, 6, 8],
    [1, 7]
]

visited = [False] * 9

bfs(graph, 1, visited)

